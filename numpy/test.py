import numpy as np

### 出力
"""

"""

#########  3 × 3 の、値が、0 の行列 作成
arr = np.zeros((3, 3))
arr

### 出力
""" 
array([[0., 0., 0.],
       [0., 0., 0.],
       [0., 0., 0.]])
"""

#########  要素数 出力
arr.shape
### 出力
""" 
(3, 3)
"""

#########  初期値 セット
arr2 = np.array([[1,2], [3,4]])
arr2
### 出力
"""
array([[1, 2],
       [3, 4]])
"""

##########  行列の足し算
Aarr = np.array([[1,2], [3,4]])
Barr = np.array([[5,6], [7,8]])

ABarr = Aarr + Barr
ABarr
### 出力
"""
array([[ 6,  8],
       [10, 12]])
"""

##########  行列の掛け算
Aarr @ Barr

### 出力
"""
array([[19, 22],
       [43, 50]])
"""

##########  行列 転置
Aarr.T
### 出力
"""
array([[1, 3],
       [2, 4]])
"""

######### スライス
AAarr = np.array([[1,2,5], [3,4,1]])
AAarr

### 出力
"""
array([[1, 2, 5],
       [3, 4, 1]])
"""

AAarr.shape
"""
(2, 3)
"""

##### 値の 1, 2, 5 を取得
AAarr[:1, :]

### 出力
"""
array([[1, 2, 5]])
"""

##### 値の 2,5　と、 4, 1 を取得 1:3 => 1以上, 3以下
AAarr[:, 1:3]

### 出力
"""
array([[2, 5],
       [4, 1]])
"""